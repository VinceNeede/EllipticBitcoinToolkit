# This workflow will install Python dependencies, run tests, build docs, and deploy
name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.13"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -e ".[dev]"
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --ignore=W504 --statistics
    - name: Test with pytest
      run: |
        pytest

  docs:
    runs-on: ubuntu-latest
    needs: test  # Only run if tests pass
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: "3.13"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -e ".[docs]"
        sudo apt-get install pandoc
    - name: Setup Pages
      uses: actions/configure-pages@v5
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    - name: Build docs
      run: |
        sphinx-build -b html docs docs/_build/html
    - name: Upload pages artifact
      uses: actions/upload-pages-artifact@v3
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      with:
        path: docs/_build/html/

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: [test, docs]  # Only run if both tests and docs pass
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'  # Only deploy on main branch pushes
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4